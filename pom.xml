<?xml version="1.0"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.tylerthrailkill</groupId>
  <artifactId>find-the-sniper-helper</artifactId>
  <version>0.0.1</version>
  <properties>
    <cdk.version>1.138.2</cdk.version>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <kotlin.version>1.6.10</kotlin.version>
    <kotest.version>4.3.0</kotest.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus-plugin.version>2.6.2.Final</quarkus-plugin.version>
    <surefire-plugin.version>2.22.1</surefire-plugin.version>
    <kotlin.code.style>official</kotlin.code.style>
    <serialization.version>1.3.2</serialization.version>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>2.6.2.Final</quarkus.platform.version>
    <ktor.version>1.6.7</ktor.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-amazon-services-bom</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-core</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-cio</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-json</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-auth</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-apache</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-auth</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-serialization</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-locations</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-netty</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <dependency>
      <scope>compile</scope>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-core</artifactId>
      <version>${ktor.version}</version>
    </dependency>
    <!-- AWS/CDK -->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>netty-nio-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>apache-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>ssm</artifactId>
    </dependency>
    <dependency>
      <groupId>software.amazon.awscdk</groupId>
      <artifactId>apigateway</artifactId>
      <version>${cdk.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awscdk</groupId>
      <artifactId>core</artifactId>
      <version>${cdk.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awscdk</groupId>
      <artifactId>s3</artifactId>
      <version>${cdk.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awscdk</groupId>
      <artifactId>lambda</artifactId>
      <version>${cdk.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awscdk</groupId>
      <artifactId>ssm</artifactId>
      <version>${cdk.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awscdk</groupId>
      <artifactId>codedeploy</artifactId>
      <version>${cdk.version}</version>
    </dependency>

    <!-- Kotlin -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-coroutines-core</artifactId>
      <version>1.3.7</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-coroutines-jdk8</artifactId>
      <version>1.3.7</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-serialization-json</artifactId>
      <version>${serialization.version}</version>
    </dependency>

    <!-- Quarkus/Kogito -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kotlin</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>
    <!--        <dependency>-->
    <!--            <groupId>io.quarkus</groupId>-->
    <!--            <artifactId>quarkus-rest-client-jackson</artifactId>-->
    <!--        </dependency>-->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-amazon-lambda</artifactId>
    </dependency>
    <!-- test -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Other stuff -->
    <dependency>
      <groupId>io.github.cdimascio</groupId>
      <artifactId>java-dotenv</artifactId>
      <version>5.2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>kotlin-extensions</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.kotest</groupId>
      <artifactId>kotest-runner-junit5-jvm</artifactId>
      <version>${kotest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.github.microutils</groupId>
      <artifactId>kotlin-logging-jvm</artifactId>
      <version>2.0.8</version>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>
    <plugins>

      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <mainClass>com.sunrun.changeorder.ChangeOrderApp</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-serialization</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <javaParameters>true</javaParameters>
          <jvmTarget>11</jvmTarget>
          <compilerPlugins>
            <plugin>kotlinx-serialization</plugin>
            <plugin>all-open</plugin>
          </compilerPlugins>
          <pluginOptions>
            <option>all-open:annotation=javax.ws.rs.Path</option>
            <option>all-open:annotation=javax.enterprise.context.ApplicationScoped</option>
            <option>all-open:annotation=io.quarkus.test.junit.QuarkusTest</option>
          </pluginOptions>
          <languageVersion>1.5</languageVersion>
          <args>
            <arg>-Xopt-in=kotlin.RequiresOptIn</arg>
          </args>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>
                      ${project.build.directory}/${project.build.finalName}-runner
                    </native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager
                    </java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
        <!-- This was a nice idea so the dev doesnt have to remember to add the flag to build locally. Unfortunately this doesnt work in jenkins. Commenting it out for now. -->
        <!-- <quarkus.native.container-build>true</quarkus.native.container-build>-->
      </properties>
    </profile>
  </profiles>
</project>
